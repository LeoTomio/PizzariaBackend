// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type {
  ADMIN
  RESTAURANT
  USER
}

model User {
  id         String    @id @default(uuid())
  name       String    @unique
  email      String    @unique
  password   String
  type       Type
  company    Company?  @relation(fields: [company_id], references: [id])
  company_id String?   @unique
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Company {
  id               String           @id @default(uuid())
  name             String           @unique
  phone            String
  address          String
  withdrawalTime   String
  deliveryTimeFrom String
  deliveryTimeTo   String
  banner           String
  instagram        String?
  facebook         String?
  isActive         Boolean          @default(true)
  weekDays         CompanyWeekDay[]
  created_at       DateTime?        @default(now())
  updated_at       DateTime?        @default(now())
  Category         Category[]
  Order            Order[]
  User             User?

  @@map("company")
}

model CompanyWeekDay {
  id         Int       @id @default(autoincrement())
  workHours  String
  company_id String
  weekday    String
  company    Company   @relation(fields: [company_id], references: [id])
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@unique([company_id, weekday]) // Evita duplicidade na relação
  @@map("company_weekdays")
}

model Category {
  id         String    @id @default(uuid())
  name       String    @unique()
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  company    Company   @relation(fields: [company_id], references: [id])
  company_id String
  products   Product[]

  @@map("categories")
}

model Product {
  id                String    @id @default(uuid())
  name              String
  price             String
  promotional_price String?
  description       String
  banner            String
  unity             Int       @default(1)
  created_at        DateTime? @default(now())
  updated_at        DateTime? @default(now())

  category    Category @relation(fields: [category_id], references: [id])
  category_id String
  Items       Item[]

  @@map("products")
}

model Order {
  id         String    @id @default(uuid())
  table      Int
  status     Boolean   @default(false)
  name       String?
  draft      Boolean   @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  items      Item[]
  company    Company   @relation(fields: [company_id], references: [id])
  company_id String

  @@map("orders")
}

model Item {
  id     String @id @default(uuid())
  amount Int

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
  order_id   String
  product_id String

  @@map("items")
}
